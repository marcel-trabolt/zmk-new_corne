#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_da.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        prntscrn: prntscrn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(DA_N4))>;
            label = "PRNTSCRN";
        };

        lftbrckt: lftbrckt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(DA_N8))>;
            label = "LFTBRCKT";
        };

        rghtbrckt: rghtbrckt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(DA_N9))>;
            label = "RGHTBRCKT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q               &kp W           &kp E           &kp R             &kp T                               &kp UP                &kp Y        &kp U              &kp I            &kp O            &kp P                    &kp BSPC
&td0       &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL DA_AE  &kp DA_O_SLASH
&kp LCTRL  &kp Z               &kp X           &kp C           &kp V             &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M              &kp COMMA        &kp DOT          &kp DA_A_RING            &kp ESC
                                               &kp LGUI        &mo 1             &lt 4 SPACE                                               &lt 3 ENTER  &mo 2              &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp DA_EXCLAMATION  &kp DA_DOUBLE_QUOTES  &kp DA_HASH        &kp DA_EURO        &kp DA_PERCENT                            &mmv MOVE_UP                     &kp DA_AMPERSAND     &kp DA_LESS_THAN         &kp DA_EQUAL     &kp DA_GREATER_THAN       &kp RA(DA_I)          &kp DA_DOUBLE_QUOTES
&trans  &kp RA(ASTERISK)    &kp DA_HASH           &kp DA_PERCENT     &kp DA_SLASH       &kp DA_TILDE              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp DA_LEFT_BRACKET  &kp DA_LEFT_PARENTHESIS  &kp DA_QUESTION  &kp DA_RIGHT_PARENTHESIS  &kp DA_RIGHT_BRACKET  &kp DA_MINUS
&trans  &kp DA_BACKSLASH    &kp DA_UNDERSCORE     &kp LS(LG(DA_N4))  &kp LS(LG(DA_N5))  &mkp MB5        &trans                    &mmv MOVE_DOWN                   &kp DOLLAR           &lftbrckt                &kp DA_ASTERISK  &rghtbrckt                &kp DA_CARET          &kp DA_SINGLE_QUOTE
                                                  &trans             &trans             &kp SPACE                                                                  &kp RET              &trans                   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                                   &mmv MOVE_UP                     &trans   &rgb_ug RGB_ON   &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans
&trans  &kp DA_N6  &kp DA_N7  &kp DA_N8  &kp DA_N9  &kp DA_N0                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans   &rgb_ug RGB_OFF  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans
&trans  &trans     &trans     &trans     &trans     &trans     &kp C_MUTE                    &mmv MOVE_DOWN                   &trans   &trans           &trans           &trans           &trans           &trans
                              &trans     &trans     &trans                                                                    &kp INS  &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                                 &mmv MOVE_UP                     &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &trans        &trans            &trans    &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN     &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FF  &trans
&trans  &trans  &trans  &trans   &trans   &trans   &kp C_MUTE                    &mmv MOVE_DOWN                   &trans                &trans           &trans        &trans            &trans    &trans
                        &trans   &trans   &trans                                                                  &trans                &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        navigation_layer {
            bindings = <
&kp LG(RIGHT)  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)  &kp LG(T)                    &trans          &trans  &trans              &kp PAGE_UP   &kp PAGE_DOWN  &trans         &trans
&kp LG(LEFT)   &trans     &trans     &trans     &trans     &trans               &trans  &trans  &trans  &trans  &kp LEFT            &kp DOWN      &kp UP         &kp RIGHT      &trans
&trans         &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(B)  &trans            &trans          &trans  &kp LG(LEFT_ARROW)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &trans
                                     &trans     &trans     &trans                                       &trans  &trans              &trans
            >;

            label = "NAVIGATION";
        };
    };
};
